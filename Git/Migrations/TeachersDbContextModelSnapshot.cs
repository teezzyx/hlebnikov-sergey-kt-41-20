// <auto-generated />
using System;
using Git.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace Git.Migrations
{
    [DbContext(typeof(TeachersDbContext))]
    partial class TeachersDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.13")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("Git.Models.AcademicDegrees", b =>
                {
                    b.Property<int>("DegreeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("DegreeId"));

                    b.Property<string>("Degree")
                        .HasColumnType("text");

                    b.Property<int?>("TeacherId")
                        .HasColumnType("integer");

                    b.HasKey("DegreeId");

                    b.ToTable("AcademicDegrees", (string)null);
                });

            modelBuilder.Entity("Git.Models.Departments", b =>
                {
                    b.Property<int>("DepartmentId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("DepartmentId"));

                    b.Property<string>("DepartmentName")
                        .HasColumnType("text");

                    b.HasKey("DepartmentId");

                    b.ToTable("Departments", (string)null);
                });

            modelBuilder.Entity("Git.Models.Disciplines", b =>
                {
                    b.Property<int>("DisciplineId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("DisciplineId"));

                    b.Property<string>("DisciplineName")
                        .HasColumnType("text");

                    b.HasKey("DisciplineId");

                    b.ToTable("Disciplines", (string)null);
                });

            modelBuilder.Entity("Git.Models.JobLoads", b =>
                {
                    b.Property<int>("JobloadId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("JobloadId"));

                    b.Property<int>("Hours")
                        .HasColumnType("integer");

                    b.Property<int?>("TeacherId")
                        .HasColumnType("integer");

                    b.HasKey("JobloadId");

                    b.HasIndex("TeacherId");

                    b.ToTable("JobLoads", (string)null);
                });

            modelBuilder.Entity("Git.Models.JobPosts", b =>
                {
                    b.Property<int>("JobpostId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("JobpostId"));

                    b.Property<string>("JobPost")
                        .HasColumnType("text");

                    b.Property<int?>("TeacherId")
                        .HasColumnType("integer");

                    b.HasKey("JobpostId");

                    b.HasIndex("TeacherId");

                    b.ToTable("JobPosts", (string)null);
                });

            modelBuilder.Entity("Git.Models.Teachers", b =>
                {
                    b.Property<int>("TeacherId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("TeacherId"));

                    b.Property<int?>("DegreeId")
                        .HasColumnType("integer");

                    b.Property<int?>("DepartmentId")
                        .HasColumnType("integer");

                    b.Property<int?>("DisciplineId")
                        .HasColumnType("integer");

                    b.Property<DateTime>("EnrollmentDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("LastName")
                        .HasColumnType("text");

                    b.Property<string>("Name")
                        .HasColumnType("text");

                    b.HasKey("TeacherId");

                    b.HasIndex("DegreeId");

                    b.HasIndex("DepartmentId");

                    b.HasIndex("DisciplineId");

                    b.ToTable("Teachers", (string)null);
                });

            modelBuilder.Entity("Git.Models.JobLoads", b =>
                {
                    b.HasOne("Git.Models.Teachers", "Teacher")
                        .WithMany("JobLoads")
                        .HasForeignKey("TeacherId");

                    b.Navigation("Teacher");
                });

            modelBuilder.Entity("Git.Models.JobPosts", b =>
                {
                    b.HasOne("Git.Models.Teachers", "Teachers")
                        .WithMany("JobPosts")
                        .HasForeignKey("TeacherId");

                    b.Navigation("Teachers");
                });

            modelBuilder.Entity("Git.Models.Teachers", b =>
                {
                    b.HasOne("Git.Models.AcademicDegrees", "AcademicDegrees")
                        .WithMany("Teachers")
                        .HasForeignKey("DegreeId");

                    b.HasOne("Git.Models.Departments", "Departments")
                        .WithMany("Teacher")
                        .HasForeignKey("DepartmentId");

                    b.HasOne("Git.Models.Disciplines", "Disciplines")
                        .WithMany("Teachers")
                        .HasForeignKey("DisciplineId");

                    b.Navigation("AcademicDegrees");

                    b.Navigation("Departments");

                    b.Navigation("Disciplines");
                });

            modelBuilder.Entity("Git.Models.AcademicDegrees", b =>
                {
                    b.Navigation("Teachers");
                });

            modelBuilder.Entity("Git.Models.Departments", b =>
                {
                    b.Navigation("Teacher");
                });

            modelBuilder.Entity("Git.Models.Disciplines", b =>
                {
                    b.Navigation("Teachers");
                });

            modelBuilder.Entity("Git.Models.Teachers", b =>
                {
                    b.Navigation("JobLoads");

                    b.Navigation("JobPosts");
                });
#pragma warning restore 612, 618
        }
    }
}
